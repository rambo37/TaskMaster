services:
  client:
    build:
      context: .                           # Root directory, so that the Dockerfile can pick up the shared-utils directory
      dockerfile: ./client/Dockerfile      # Explicitly reference the client Dockerfile
    ports:
      - "3000:3000"                        # Expose client app on port 3000
    develop:
      watch:
        - path: ./client/src
          action: sync
          target: /app/client/src
        - path: ./client/public
          action: sync
          target: /app/client/public
        - path: ./shared-utils
          action: sync
          target: /app/shared-utils
        - path: ./client/package.json
          action: rebuild
    environment:
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL_DOCKER}

  server:
    build:
      context: .                           # Root directory, so that the Dockerfile can pick up the shared-utils directory
      dockerfile: ./server/Dockerfile      # Explicitly reference the server Dockerfile
    ports:
      - "5000:5000"                        # Expose server app on port 5000
    develop:
      watch:
        - path: ./server/server.js
          action: sync
          target: /app/server/server.js
        - path: ./server/models
          action: sync
          target: /app/server/models
        - path: ./shared-utils
          action: sync
          target: /app/shared-utils
        - path: ./server/package.json
          action: rebuild
    environment:
      - MONGODB_URI=${MONGODB_URI_DOCKER}
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - REACT_APP_FRONTEND_URL=${REACT_APP_FRONTEND_URL_DOCKER}
      - MAIL_SERVICE=${MAIL_SERVICE}
      - MAIL_USER=${MAIL_USER}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - mongo                              # Server depends on mongo being up first
  
  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db                # Persistent data storage for MongoDB
    ports:
      - "27017:27017"                      # Expose MongoDB on port 27017

volumes:
  mongo_data: